{
  "metadata": {
    "name": "Fizz",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<h1>FizzBuzz: Write a program that prints numbers from 1 to 100, replacing multiples of 3 with \"Fizz\" and multiples of 5 with \"Buzz\".</h1>",
      "status": "",
      "output": "<h1>FizzBuzz: Write a program that prints numbers from 1 to 100, replacing multiples of 3 with \"Fizz\" and multiples of 5 with \"Buzz\".</h1>",
      "type": "html"
    },
    {
      "code": "<p>1. Define a function fizzBuzz(n) that takes an integer n as input. </br>\n2. Use a for loop to iterate from 1 to n (inclusive).</br>\n3. For each number i, check the conditions:</br>\n    - If i is divisible by both 3 and 5, print \"FizzBuzz\".</br>\n    - If i is divisible by 3, print \"Fizz\".</br>\n    - If i is divisible by 5, print \"Buzz\".</br>\n    - Otherwise, print the number i.</br>\n4. Call the function with n = 100 to print the FizzBuzz sequence up to 100.<p>",
      "status": "",
      "output": "<p>1. Define a function fizzBuzz(n) that takes an integer n as input. <br>\n2. Use a for loop to iterate from 1 to n (inclusive).<br>\n3. For each number i, check the conditions:<br>\n    - If i is divisible by both 3 and 5, print \"FizzBuzz\".<br>\n    - If i is divisible by 3, print \"Fizz\".<br>\n    - If i is divisible by 5, print \"Buzz\".<br>\n    - Otherwise, print the number i.<br>\n4. Call the function with n = 100 to print the FizzBuzz sequence up to 100.</p><p></p>",
      "type": "html"
    },
    {
      "code": "// FizzBuzz function\nfunction fizzBuzz(n) {\n  for (let i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n      scrib.show(\"FizzBuzz\");\n    } else if (i % 3 === 0) {\n      scrib.show(\"Fizz\");\n    } else if (i % 5 === 0) {\n      scrib.show(\"Buzz\");\n    } else {\n      scrib.show(i);\n    }\n  }\n}\n\n// Call the function\nfizzBuzz(100);",
      "status": "[6]<br><span style=\"font-size:8px\">17ms<span></span></span>",
      "output": "1 <br>2 <br>Fizz <br>4 <br>Buzz <br>Fizz <br>7 <br>8 <br>Fizz <br>Buzz <br>11 <br>Fizz <br>13 <br>14 <br>FizzBuzz <br>16 <br>17 <br>Fizz <br>19 <br>Buzz <br>Fizz <br>22 <br>23 <br>Fizz <br>Buzz <br>26 <br>Fizz <br>28 <br>29 <br>FizzBuzz <br>31 <br>32 <br>Fizz <br>34 <br>Buzz <br>Fizz <br>37 <br>38 <br>Fizz <br>Buzz <br>41 <br>Fizz <br>43 <br>44 <br>FizzBuzz <br>46 <br>47 <br>Fizz <br>49 <br>Buzz <br>Fizz <br>52 <br>53 <br>Fizz <br>Buzz <br>56 <br>Fizz <br>58 <br>59 <br>FizzBuzz <br>61 <br>62 <br>Fizz <br>64 <br>Buzz <br>Fizz <br>67 <br>68 <br>Fizz <br>Buzz <br>71 <br>Fizz <br>73 <br>74 <br>FizzBuzz <br>76 <br>77 <br>Fizz <br>79 <br>Buzz <br>Fizz <br>82 <br>83 <br>Fizz <br>Buzz <br>86 <br>Fizz <br>88 <br>89 <br>FizzBuzz <br>91 <br>92 <br>Fizz <br>94 <br>Buzz <br>Fizz <br>97 <br>98 <br>Fizz <br>Buzz <br>",
      "type": "code"
    },
    {
      "code": "// FizzBuzz function (concise version)\nfunction fizzBuzz(n) {\n for (let i = 1; i <= 100; i++) {\n  scrib.show((i % 3 ? '' : 'Fizz') + (i % 5 ? '' : 'Buzz') || i);\n}\n}\n\n// Call the function\nfizzBuzz(100);",
      "status": "[5]<br><span style=\"font-size:8px\">43ms<span></span></span>",
      "output": "1 <br>2 <br>Fizz <br>4 <br>Buzz <br>Fizz <br>7 <br>8 <br>Fizz <br>Buzz <br>11 <br>Fizz <br>13 <br>14 <br>FizzBuzz <br>16 <br>17 <br>Fizz <br>19 <br>Buzz <br>Fizz <br>22 <br>23 <br>Fizz <br>Buzz <br>26 <br>Fizz <br>28 <br>29 <br>FizzBuzz <br>31 <br>32 <br>Fizz <br>34 <br>Buzz <br>Fizz <br>37 <br>38 <br>Fizz <br>Buzz <br>41 <br>Fizz <br>43 <br>44 <br>FizzBuzz <br>46 <br>47 <br>Fizz <br>49 <br>Buzz <br>Fizz <br>52 <br>53 <br>Fizz <br>Buzz <br>56 <br>Fizz <br>58 <br>59 <br>FizzBuzz <br>61 <br>62 <br>Fizz <br>64 <br>Buzz <br>Fizz <br>67 <br>68 <br>Fizz <br>Buzz <br>71 <br>Fizz <br>73 <br>74 <br>FizzBuzz <br>76 <br>77 <br>Fizz <br>79 <br>Buzz <br>Fizz <br>82 <br>83 <br>Fizz <br>Buzz <br>86 <br>Fizz <br>88 <br>89 <br>FizzBuzz <br>91 <br>92 <br>Fizz <br>94 <br>Buzz <br>Fizz <br>97 <br>98 <br>Fizz <br>Buzz <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}