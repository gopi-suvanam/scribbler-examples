{
  "metadata": {
    "name": "GPU Art Video",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<div style=\"text-align:center;background-color:#fede02;color:#555;margin:-10px;margin-left:-20px;margin-right:-20px;\">\n        <br><h1  style=\"color:#555\">Illustrate your story with AI Art  </h1>\n<p class=\"site-masthead__description mb-0\" style=\"color:#555\">\n        Chose an artist style and give a story to get your art using web-stable diffusion and Web GPU.\n    </p><br></div>",
      "status": "",
      "output": "<div style=\"text-align:center;background-color:#fede02;color:#555;margin:-10px;margin-left:-20px;margin-right:-20px;\">\n        <br><h1 style=\"color:#555\">Illustrate your story with AI Art  </h1>\n<p class=\"site-masthead__description mb-0\" style=\"color:#555\">\n        Chose an artist style and give a story to get your art using web-stable diffusion and Web GPU.\n    </p><br></div>",
      "type": "html"
    },
    {
      "code": "//>md\n## Acknowledgements\n- [Stability AI](https://stability.ai/) for Stable Diffusion Models\n- [MLC AI](https://github.com/mlc-ai/mlc-llm) for compiling them into JavaScript using WebGPU",
      "status": "",
      "output": "<h2>Acknowledgements</h2>\n<ul>\n<li><a href=\"https://stability.ai/\">Stability AI</a> for Stable Diffusion Models</li>\n<li><a href=\"https://github.com/mlc-ai/mlc-llm\">MLC AI</a> for compiling them into JavaScript using WebGPU</li>\n</ul>\n",
      "type": "html"
    },
    {
      "code": "<span id=\"init-progress-tracker-label\">Stable Diffusion Not Loaded</span>\n<progress id=\"init-progress-tracker-progress\" max=\"100\" value=\"100\"> </progress>\n",
      "status": "",
      "output": "<span id=\"init-progress-tracker-label\">Fetching param cache[29/61]: 975MB fetched. 49% completed, 8 secs elapsed. It can take a while when we first visit this page to populate the cache. Later refreshes will become faster.</span>\n<progress id=\"init-progress-tracker-progress\" max=\"100\" value=\"49.52710438920566\"> </progress>\n",
      "type": "html"
    },
    {
      "code": "<div>\n Artist   <select name=\"artist\" id=\"artist\">\n    <option >Salvador Dali</option>\n    <option selected=\"selected\">Picasso</option>\n    <option selected=\"selected\">Rembrandt</option>\n\t<option selected=\"selected\">Kahlo</option>\n\t<option selected=\"selected\">Da Vinci</option>\n\t<option selected=\"selected\">Impressionist</option>\n\t<option selected=\"selected\">Realist</option>\n\t<option selected=\"selected\">Surrealist</option>\n\t<option selected=\"selected\">Post Modernist</option>\n  </select>\n</div>\n\n<script src=\"dist/stable_diffusion.js\"></script>\n\n<div>\n  Paste your story here: <textarea\n  name=\"inputPrompt\"\n  id=\"inputPrompt\"\n  type=\"textarea\"\n  style=\"border:thin black\"\n  rows=10\n  size=\"300\">In the heart of a forgotten forest, an ancient tree whispered secrets only the wind could carry. A curious fox, drawn by a faint glimmer, stumbled upon a hidden door carved into the tree's bark. Inside, he found a world of shimmering lights and tiny creatures bustling with magic. Mesmerized, he wandered through, each step igniting a new, vivid memory of places he had never been. As dawn broke, the fox blinked, finding himself back in the forest, the door gone - but with a heart full of stories waiting to be told.</textarea> \n\t<br>\n  Negative prompt (optional): <input\n  name=\"negativePrompt\"\n  id=\"negativePrompt\"\n  type=\"text\"\n  value=\"\"/>\n</div>\n\n<div>\n \n  <br>\n\n\n  <select name=\"vae-cycle\" id=\"vaeCycle\" style=\"display:none\">\n    <option value=\"-1\">No</option>\n    <option value=\"2\">Run VAE every two UNet steps after step 10</option>\n  </select>\n\n  <div id=\"progress\">\n    <label id=\"gpu-tracker-label\"></label><br>\n    <label id=\"progress-tracker-label\"></label><br>\n    <progress id=\"progress-tracker-progress\" max=\"100\" value=\"100\"> </progress>\n  </div>\n  <button id=\"generate\">Generate</button>\n  <button onclick=\"playNarrationList(scenes ,imgBlobs)\" id=\"play-again\" style=\"display:none\">Play Again</button>\n</div>",
      "status": "",
      "output": "<div>\n Artist   <select name=\"artist\" id=\"artist\">\n    <option>Salvador Dali</option>\n    <option selected=\"selected\">Picasso</option>\n    <option selected=\"selected\">Rembrandt</option>\n\t<option selected=\"selected\">Kahlo</option>\n\t<option selected=\"selected\">Da Vinci</option>\n\t<option selected=\"selected\">Impressionist</option>\n\t<option selected=\"selected\">Realist</option>\n\t<option selected=\"selected\">Surrealist</option>\n\t<option selected=\"selected\">Post Modernist</option>\n  </select>\n</div>\n\n<script src=\"dist/stable_diffusion.js\"></script>\n\n<div>\n  Paste your story here: <textarea name=\"inputPrompt\" id=\"inputPrompt\" type=\"textarea\" style=\"border:thin black\" rows=\"10\" size=\"300\">In the heart of a forgotten forest, an ancient tree whispered secrets only the wind could carry. A curious fox, drawn by a faint glimmer, stumbled upon a hidden door carved into the tree's bark. Inside, he found a world of shimmering lights and tiny creatures bustling with magic. Mesmerized, he wandered through, each step igniting a new, vivid memory of places he had never been. As dawn broke, the fox blinked, finding himself back in the forest, the door gone - but with a heart full of stories waiting to be told.</textarea> \n\t<br>\n  Negative prompt (optional): <input name=\"negativePrompt\" id=\"negativePrompt\" type=\"text\" value=\"\">\n</div>\n\n<div>\n \n  <br>\n\n\n  <select name=\"vae-cycle\" id=\"vaeCycle\" style=\"display:none\">\n    <option value=\"-1\">No</option>\n    <option value=\"2\">Run VAE every two UNet steps after step 10</option>\n  </select>\n\n  <div id=\"progress\">\n    <label id=\"gpu-tracker-label\"></label><br>\n    <label id=\"progress-tracker-label\"></label><br>\n    <progress id=\"progress-tracker-progress\" max=\"100\" value=\"100\"> </progress>\n  </div>\n  <button id=\"generate\">Generate</button>\n  <button onclick=\"playNarrationList(scenes ,imgBlobs)\" id=\"play-again\" style=\"display:none\">Play Again</button>\n</div>",
      "type": "html"
    },
    {
      "code": "<div>\n<canvas id=\"canvas\" width=\"812\" height=\"512\" style=\"display:none\"></canvas>\n</div>\n<div>\n<canvas id=\"displayCanvas\" width=\"812\" height=\"512\" style=\"display:none\"></canvas>\n</div>",
      "status": "",
      "output": "<div>\n<canvas id=\"canvas\" width=\"812\" height=\"512\" style=\"display:none\"></canvas>\n</div>\n<div>\n<canvas id=\"displayCanvas\" width=\"812\" height=\"512\" style=\"display:none\"></canvas>\n</div>",
      "type": "html"
    },
    {
      "code": "async function loadSDEngine(){\n  await scrib.loadScript(\"https://websd.mlc.ai/dist/tvmjs_runtime.wasi.js\");\n  await scrib.loadScript(\"https://websd.mlc.ai/dist/tvmjs.bundle.js\");\n  tvmjsGlobalEnv={};\n  await scrib.loadScript(\"https://examples.scribbler.live/stable_diffusion.js\");\n  await scrib.loadScript(\"https://websd.mlc.ai/assets/js/srcset-polyfill.js\");\n  tokenizers=await import( \"https://websd.mlc.ai/dist/tokenizers-wasm/tokenizers_wasm.js\");\n  TokenizerWasm = tokenizers.TokenizerWasm;\n  init=tokenizers.default;\n  async function getTokenizer(name) {\n\tawait init();\n\tconst jsonText = await (await fetch(\"https://huggingface.co/\" + name + \"/raw/main/tokenizer.json\")).text();\n\treturn new TokenizerWasm(jsonText);\n  }\n  tvmjsGlobalEnv.getTokenizer = getTokenizer;  \n  function initProgressCallback(report) {\n\tdocument.getElementById(\"init-progress-tracker-label\").innerHTML = report.text;\n\tdocument.getElementById(\"init-progress-tracker-progress\").value = report.progress * 100;\n  }\n  window.sdEngine=await getWebStableDiffusion(initProgressCallback,scrib.getDom(\"canvas\"));\n}\nawait loadSDEngine();\ndocument.getElementById(\"init-progress-tracker-label\").innerHTML = \"Model ready to be used\";",
      "status": "[*]",
      "output": "",
      "type": "code"
    },
    {
      "code": "function progressCallback(stage, counter, numSteps, totalNumSteps) {\n  const timeElapsed = (performance.now() - tstart) / 1000;\n  let text = `Generating ${imageNum} of ${numImages} images... at stage ` + stage;\n  if (stage == \"unet\") {\n\tcounter += 1;\n\ttext += \" step [\" + counter + \"/\" + numSteps + \"]\"\n  }\n  if (stage == \"vae\") {\n\tcounter = totalNumSteps;\n  }\n  text += \", \" + Math.ceil(timeElapsed) + \" secs elapsed.\";\n  document.getElementById(\"progress-tracker-label\").innerHTML = text;\n  document.getElementById(\"progress-tracker-progress\").value = (counter / totalNumSteps) * 100;\n}",
      "status": "[2]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "async function generate(){\n  \n  const prompt = document.getElementById(\"inputPrompt\").value;\n  window.scenes=prompt.trim().split(\".\");\n  window.scenes=scenes.filter(x=>x);\n  const artist = document.getElementById(\"artist\").value;\n  \n  const negPrompt = document.getElementById(\"negativePrompt\").value;\n  window.tstart=performance.now();\n  window.numImages=scenes.length;\n  window.imgBlobs=[];\n  const canvas = document.getElementById('canvas');\n  for(let i=0;i<scenes.length;i=i+1){\n\twindow.imageNum=i+1;\n\tawait sdEngine.generate(`${artist} style art on: ${scenes[i]}`, negPrompt, progressCallback, 0, vaeCycle);\n\t\n\tcanvas.toBlob(blob=>imgBlobs.push(blob));\n  }\n   document.getElementById(\"progress-tracker-label\").innerHTML = \"Images ready. Palying Video\";\t\n  playNarrationList(scenes ,imgBlobs);\n  \n}\nscrib.getDom(\"generate\").onclick=generate;\n\"\"",
      "status": "[3]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": " <br>",
      "type": "code"
    },
    {
      "code": "// Function to create a list of SpeechSynthesisUtterance objects from scenes\nfunction createNarrationList(scenes,rate = 1.5) {\n  return scenes.map(scene => {\n    const utterance = new SpeechSynthesisUtterance(`${scene}`);\n    // Optionally set voice properties like rate, pitch, etc.\n    utterance.rate = rate; // Normal speed\n    utterance.pitch = 1; // Normal pitch\n    return utterance;\n  });\n}\n\n// Function to play the list of narrations sequentially\nfunction playNarrationList(scenes ,imgBlobs,rate=1.5) {\n   scrib.getDom(\"play-again\").style.display = \"none\"; \n  let narrations= createNarrationList(scenes,rate = 1.5)\n  const synth = window.speechSynthesis;\n  let prevImg=null;\n  let currImg=null;\n  function narrateNext(index) {\n\tscrib.getDom(\"play-again\").style.display=\"none\";\n\t const displayCanvas = document.getElementById('displayCanvas');\n\t const displayCtx = displayCanvas.getContext('2d');\n\tdisplayCanvas.style.display='block';\n\n\tlet fadeOutAlpha = 1; // Start old image at full opacity\n\tlet fadeInAlpha = 0;  // Start new image at 0 opacity\n\t\n    if (index < narrations.length) {\n\t   if(index<imgBlobs.length){\n\t\t prevImg=currImg;\n\t  \t const reader = new FileReader();\n\t\t  reader.onload = function(event) {\n\t\t\t// Create a new image\n\t\t\t\n\t\t\tcurrImg = new Image();\n\t\t\tcurrImg.onload = function() {\n\t\t\t\tlet alpha = 0; // Start with 0 opacity\n\t\t\t\tfunction fade() {\n\t\t\t\t\t// Clear canvas\n\t\t\t\t\tdisplayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\n\n\t\t\t\t\t// Draw the old image, gradually reducing its opacity\n\t\t\t\t    if(prevImg){\n\t\t\t\t\t  displayCtx.globalAlpha = fadeOutAlpha;\n\t\t\t\t\t  displayCtx.drawImage(prevImg, 0, 0, displayCanvas.width, displayCanvas.height);\n\t\t\t\t\t}\n\t\t\t\t\t// Draw the new image, gradually increasing its opacity\n\t\t\t\t\tdisplayCtx.globalAlpha = fadeInAlpha;\n\t\t\t\t\tdisplayCtx.drawImage(currImg, 0, 0, displayCanvas.width, displayCanvas.height);\n\n\t\t\t\t\t// Update alpha values\n\t\t\t\t\tfadeOutAlpha -= 0.005; // Decrease for fade-out effect\n\t\t\t\t\tfadeInAlpha += 0.005;  // Increase for fade-in effect\n\n\t\t\t\t\t// Continue animation until the fade-out is complete\n\t\t\t\t\tif (fadeOutAlpha > 0) {\n\t\t\t\t\t\trequestAnimationFrame(fade);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayCtx.globalAlpha = 1; // Reset alpha to full opacity\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfade();\n\t\t\t  \n\t\t\t};\n\t\t\tcurrImg.src = event.target.result;  // The data URL from FileReader\n\t\t  };\n\t\t  reader.readAsDataURL(imgBlobs[index]);  // Read the blob as a data URL\n\t   }\n\n\t  \n      const utterance = narrations[index];\n\n      // Set onend handler to play the next narration\n      utterance.onend = () => {\n        narrateNext(index + 1); // Play the next narration\n      };\n\n      // Speak the current narration\n      synth.speak(utterance);\n\t  \n    }else{\n\t\t  scrib.getDom(\"play-again\").style.display = \"block\"; \n\t   }\n\t\n\n  \n  }\n\n  // Start narrating from the first item in the list\n  narrateNext(0);\n}\n//narrations=createNarrationList(scenes);",
      "status": "[4]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": true
}